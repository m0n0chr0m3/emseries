# Generated by carnix 0.9.2: carnix generate-nix --standalone --src ./.
with import <nixpkgs> {};
with buildRustCrateHelpers;
let inherit (lib.lists) fold;
    inherit (lib.attrsets) recursiveUpdate;
in
let cratesIO = callPackage ./crates-io.nix { };
    crates = cratesIO // rec {
# emseries-0.1.0

  crates.emseries."0.1.0" = deps: { features?(features_.emseries."0.1.0" deps {}) }: buildRustCrate {
    crateName = "emseries";
    version = "0.1.0";
    authors = [ "Savanni D'Gerinel <savanni@luminescent-dreams.com>" ];
    src = exclude [ ".git" "target" ] ./.;
    dependencies = mapFeatures features ([
      (cratesIO.crates."chrono"."${deps."emseries"."0.1.0"."chrono"}" deps)
      (cratesIO.crates."dimensioned"."${deps."emseries"."0.1.0"."dimensioned"}" deps)
      (cratesIO.crates."serde"."${deps."emseries"."0.1.0"."serde"}" deps)
      (cratesIO.crates."serde_derive"."${deps."emseries"."0.1.0"."serde_derive"}" deps)
      (cratesIO.crates."serde_json"."${deps."emseries"."0.1.0"."serde_json"}" deps)
      (cratesIO.crates."uuid"."${deps."emseries"."0.1.0"."uuid"}" deps)
      (cratesIO.crates."yaml_rust"."${deps."emseries"."0.1.0"."yaml_rust"}" deps)
    ]);
  };
  features_.emseries."0.1.0" = deps: f: updateFeatures f (rec {
    chrono = fold recursiveUpdate {} [
      { "${deps.emseries."0.1.0".chrono}"."serde" = true; }
      { "${deps.emseries."0.1.0".chrono}".default = true; }
    ];
    dimensioned."${deps.emseries."0.1.0".dimensioned}".default = true;
    emseries."0.1.0".default = (f.emseries."0.1.0".default or true);
    serde."${deps.emseries."0.1.0".serde}".default = true;
    serde_derive."${deps.emseries."0.1.0".serde_derive}".default = true;
    serde_json."${deps.emseries."0.1.0".serde_json}".default = true;
    uuid = fold recursiveUpdate {} [
      { "${deps.emseries."0.1.0".uuid}"."v4" = true; }
      { "${deps.emseries."0.1.0".uuid}".default = true; }
    ];
    yaml_rust."${deps.emseries."0.1.0".yaml_rust}".default = true;
  }) [
    (cratesIO.features_.chrono."${deps."emseries"."0.1.0"."chrono"}" deps)
    (cratesIO.features_.dimensioned."${deps."emseries"."0.1.0"."dimensioned"}" deps)
    (cratesIO.features_.serde."${deps."emseries"."0.1.0"."serde"}" deps)
    (cratesIO.features_.serde_derive."${deps."emseries"."0.1.0"."serde_derive"}" deps)
    (cratesIO.features_.serde_json."${deps."emseries"."0.1.0"."serde_json"}" deps)
    (cratesIO.features_.uuid."${deps."emseries"."0.1.0"."uuid"}" deps)
    (cratesIO.features_.yaml_rust."${deps."emseries"."0.1.0"."yaml_rust"}" deps)
  ];


# end

}; in

rec {
  emseries = crates.crates.emseries."0.1.0" deps;
  __all = [ (emseries {}) ];
  deps.bitflags."1.0.3" = {};
  deps.cfg_if."0.1.4" = {};
  deps.chrono."0.4.4" = {
    num_integer = "0.1.39";
    num_traits = "0.2.5";
    serde = "1.0.70";
    time = "0.1.40";
  };
  deps.dimensioned."0.7.0" = {
    generic_array = "0.11.1";
    num_traits = "0.2.5";
    typenum = "1.10.0";
  };
  deps.dtoa."0.4.3" = {};
  deps.emseries."0.1.0" = {
    chrono = "0.4.4";
    dimensioned = "0.7.0";
    serde = "1.0.70";
    serde_derive = "1.0.76";
    serde_json = "1.0.24";
    uuid = "0.6.5";
    yaml_rust = "0.4.0";
  };
  deps.fuchsia_zircon."0.3.3" = {
    bitflags = "1.0.3";
    fuchsia_zircon_sys = "0.3.3";
  };
  deps.fuchsia_zircon_sys."0.3.3" = {};
  deps.generic_array."0.11.1" = {
    typenum = "1.10.0";
  };
  deps.itoa."0.4.2" = {};
  deps.libc."0.2.42" = {};
  deps.linked_hash_map."0.5.1" = {};
  deps.num_integer."0.1.39" = {
    num_traits = "0.2.5";
  };
  deps.num_traits."0.2.5" = {};
  deps.proc_macro2."0.4.17" = {
    unicode_xid = "0.1.0";
  };
  deps.quote."0.6.8" = {
    proc_macro2 = "0.4.17";
  };
  deps.rand."0.4.2" = {
    fuchsia_zircon = "0.3.3";
    libc = "0.2.42";
    winapi = "0.3.5";
  };
  deps.redox_syscall."0.1.40" = {};
  deps.serde."1.0.70" = {};
  deps.serde_derive."1.0.76" = {
    proc_macro2 = "0.4.17";
    quote = "0.6.8";
    syn = "0.14.9";
  };
  deps.serde_json."1.0.24" = {
    dtoa = "0.4.3";
    itoa = "0.4.2";
    serde = "1.0.70";
  };
  deps.syn."0.14.9" = {
    proc_macro2 = "0.4.17";
    quote = "0.6.8";
    unicode_xid = "0.1.0";
  };
  deps.time."0.1.40" = {
    libc = "0.2.42";
    redox_syscall = "0.1.40";
    winapi = "0.3.5";
  };
  deps.typenum."1.10.0" = {};
  deps.unicode_xid."0.1.0" = {};
  deps.uuid."0.6.5" = {
    cfg_if = "0.1.4";
    rand = "0.4.2";
  };
  deps.winapi."0.3.5" = {
    winapi_i686_pc_windows_gnu = "0.4.0";
    winapi_x86_64_pc_windows_gnu = "0.4.0";
  };
  deps.winapi_i686_pc_windows_gnu."0.4.0" = {};
  deps.winapi_x86_64_pc_windows_gnu."0.4.0" = {};
  deps.yaml_rust."0.4.0" = {
    linked_hash_map = "0.5.1";
  };
}
